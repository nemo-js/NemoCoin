{"version":3,"file":"app.js","sourceRoot":"","sources":["../src/app.ts"],"names":[],"mappings":";;AAAA,0CAA+C;AAC/C,mCAAyC;AACzC,wCAAmD;AAEnD,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACjC,IAAI,WAAW,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACzC,IAAI,UAAU,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAExC,MAAM,GAAG,GAAG,OAAO,EAAE,CAAC;AAEtB,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC;AAE1C,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;AACvB,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;AAC3B,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAEnD,6BAA6B;AAC7B,MAAM,UAAU,GAAG,kEAAkE,CAAC;AACtF,aAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAEvB,GAAG,CAAC,IAAI,CAAC,kBAAkB,EAAE,iBAAW,CAAC,cAAc,CAAC,CAAC;AAEzD,GAAG,CAAC,IAAI,CAAC,qBAAqB,EAAE,qBAAgB,CAAC,cAAc,CAAC,CAAC;AAEjE,GAAG,CAAC,GAAG,CAAC,CAAC,GAAQ,EAAE,GAAQ,EAAE,GAAQ,EAAE,IAAS,EAAE,EAAE;IAChD,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACzB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AAEH,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE;IAC5C,OAAO,CAAC,GAAG,CACP,oDAAoD,EACpD,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,EACf,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CACjB,CAAC;IACF,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC","sourcesContent":["import { NemoCoinAPI } from \"./controller/api\";\r\nimport { State as State } from \"./state\";\r\nimport { UserInterfaceAPI } from \"./controller/ui\";\r\n\r\nvar express = require('express');\r\nvar compression = require('compression');\r\nvar bodyParser = require('body-parser');\r\n\r\nconst app = express();\r\n\r\napp.set(\"port\", process.env.PORT || 3000);\r\n\r\napp.use(compression());\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\n\r\n// todo: get from config file\r\nconst privateKey = \"98d679b9bd734a39dda428bd7efa30db7e00d160aa17e12f73f03a9f9bfd6ff9\";\r\nState.init(privateKey);\r\n\r\napp.post(\"/transaction/add\", NemoCoinAPI.addTransaction);\r\n\r\napp.post(\"/ui/transaction/add\", UserInterfaceAPI.addTransaction);\r\n\r\napp.use((err: any, req: any, res: any, next: any) => {\r\n    console.error(err.stack);\r\n    res.status(500).send(err.message);\r\n});\r\n\r\nconst server = app.listen(app.get(\"port\"), () => {\r\n    console.log(\r\n        \"  App is running at http://localhost:%d in %s mode\",\r\n        app.get(\"port\"),\r\n        app.get(\"env\")\r\n    );\r\n    console.log(\"  Press CTRL-C to stop\\n\");\r\n});"]}