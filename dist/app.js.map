{"version":3,"file":"app.js","sourceRoot":"","sources":["../src/app.ts"],"names":[],"mappings":"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","sourcesContent":["import { NemoCoinAPI } from \"./controller/api\";\r\nimport { State as State } from \"./state\";\r\nimport { UserInterfaceAPI } from \"./controller/ui\";\r\n\r\nvar express = require('express');\r\nvar compression = require('compression');\r\nvar bodyParser = require('body-parser');\r\n\r\nfunction parseArguments(): { [key: string]: any } {\r\n    const commandArgs = process.argv.slice(2);\r\n    const args: { [key: string]: any } = { };\r\n    for (let i = 0; i < commandArgs.length; i++) {\r\n        args[commandArgs[i].trim()] = commandArgs[i + 1];\r\n        i++;\r\n    }\r\n\r\n    return args;\r\n}\r\n\r\nfunction connect(port: number) {\r\n    const app = express();\r\n\r\n    app.set(\"port\", port);\r\n\r\n    app.use(compression());\r\n    app.use(bodyParser.json());\r\n    app.use(bodyParser.urlencoded({ extended: true }));\r\n\r\n    app.post(\"/transaction/add\", NemoCoinAPI.addTransaction);\r\n    app.post(\"/node/new\", NemoCoinAPI.nodeJoined);\r\n\r\n    app.get(\"/ui/balance\", UserInterfaceAPI.getBalance);\r\n    app.post(\"/ui/money/transfer\", UserInterfaceAPI.transferMoney);\r\n\r\n    app.use((err: any, req: any, res: any, next: any) => {\r\n        console.error(err.stack);\r\n        res.status(500).send(err.message);\r\n    });\r\n\r\n    const server = app.listen(app.get(\"port\"), () => {\r\n        console.log(\r\n            \"  App is running at http://localhost:%d in %s mode\",\r\n            app.get(\"port\"),\r\n            app.get(\"env\")\r\n        );\r\n    });\r\n}\r\n\r\nfunction init() {\r\n    const args = parseArguments();\r\n\r\n    let port = parseInt(args[\"-p\"]);\r\n    if (isNaN(port)) {\r\n        port = 3000;\r\n    }\r\n\r\n    if (args[\"-u\"] == null) {\r\n        console.log(\"Select a profile with -u argument\");\r\n        process.exit();\r\n    }\r\n\r\n    const myAddr = \"http://localhost:\" + port;\r\n    State.init(args[\"-u\"], myAddr);\r\n\r\n    connect(port);\r\n\r\n    State.joinNetwork();\r\n}\r\n\r\ninit();"]}