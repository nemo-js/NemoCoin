{"version":3,"file":"ui.js","sourceRoot":"","sources":["../../src/controller/ui.ts"],"names":[],"mappings":";;AACA,8CAAwD;AACxD,oCAAiC;AAEjC;IAEI,MAAM,CAAC,cAAc,CAAC,GAAY,EAAE,GAAa;QAC7C,MAAM,GAAG,GAAG,IAAI,wBAAW,CAAC,aAAK,CAAC,eAAe,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QAC3F,GAAG,CAAC,eAAe,CAAC,aAAK,CAAC,KAAK,CAAC,CAAC;QACjC,aAAK,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;QAAA,CAAC;QAEjC,aAAK,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;QAE3B,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACnB,CAAC;CAEJ;AAZD,4CAYC","sourcesContent":["import { Response, Request, NextFunction } from \"express\";\r\nimport { BlockChain, Transaction } from \"../blockchain\";\r\nimport { State } from \"../state\";\r\n\r\nexport class UserInterfaceAPI {\r\n\r\n    static addTransaction(req: Request, res: Response) {\r\n        const tx1 = new Transaction(State.myWalletAddress, req.body.to, parseInt(req.body.amount));\r\n        tx1.signTransaction(State.myKey);\r\n        State.chain.addTransaction(tx1);;\r\n\r\n        State.sendTransaction(tx1);\r\n\r\n        res.send(\"ok\");\r\n    }\r\n\r\n}"]}